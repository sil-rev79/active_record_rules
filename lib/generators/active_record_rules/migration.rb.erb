# -*- ruby -*-
class CreateActiveRecordRulesTables < ActiveRecord::Migration<%= migration_version %>
  def change
    create_table :arr__conditions do |t|
      t.string :match_class_name
      t.<%= @json_type %> :match_conditions
    end

    create_table :arr__rules do |t|
      t.string :name, index: { unique: true }
      t.string :variable_conditions
      t.string :on_match
      t.string :on_update
      t.string :on_unmatch
    end

    create_table :arr__extractor_keys do |t|
      t.references :extractor, foreign_key: { to_table: :arr__extractors }
      t.references :rule, foreign_key: { to_table: :arr__rules }
      t.string :key
      t.index [:rule_id, :key], unique: true, name: 'extractor_keys_uniqueness'
    end

    create_table :arr__extractors do |t|
      t.references :condition, foreign_key: { to_table: :arr__conditions }
      t.references :rule, foreign_key: { to_table: :arr__rules }
      t.<%= @json_type %> :fields
    end

    create_table :arr__condition_matches do |t|
      t.references :condition, foreign_key: { to_table: :arr__conditions }
      t.<%= @id_type %> :entry_id
      t.index [:condition_id, :entry_id], unique: true, name: 'condition_match_uniqueness'
    end

    create_table :arr__extractor_matches do |t|
      t.references :extractor, foreign_key: { to_table: :arr__extractors }
      t.<%= @id_type %> :entry_id
      t.<%= @json_type %> :stored_values
      t.<%= @json_type %> :previous_stored_values
      t.index [:extractor_id, :entry_id], unique: true, name: 'extractor_match_uniqueness' # Note that named_values is *not* included in the uniqueness constraints
    end

    create_table :arr__rule_matches do |t|
      t.references :rule, foreign_key: { to_table: :arr__rules }
      t.<%= @json_type %> :ids
      t.integer :awaiting_execution
      t.<%= @json_type %> :stored_arguments
      t.index [:rule_id, :ids], unique: true, name: 'rule_match_uniqueness'
      t.index :awaiting_execution, name: 'rule_match_awaiting_execution'
    end
  end
end
